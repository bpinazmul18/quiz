{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","quiz","setQuiz","nextQuestion","oldIndex","length","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","Provider","value","checkAnswer","oldValue","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","toFixed","App","correct_answer","incorrect_answers","question","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac0d8e10.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n};\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n  });\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldValue) => oldValue + 1);\n    }\n    nextQuestion();\n  };\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SetupForm = () => {\n  const { handleChange, handleSubmit, quiz, error } = useGlobalContext();\n  return (\n    <main>\n      <section className=\"quiz quiz-small\">\n        <form className=\"setup-form\">\n          <h2>setup quiz</h2>\n          {/*amount*/}\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">number of questions</label>\n            <input\n              type=\"number\"\n              name=\"amount\"\n              id=\"amount\"\n              value={quiz.amount}\n              onChange={handleChange}\n              className=\"form-input\"\n              min={1}\n              max={50}\n            />\n          </div>\n          {/*category*/}\n          <div className=\"form-control\">\n            <label htmlFor=\"category\">category</label>\n            <select\n              name=\"category\"\n              id=\"category\"\n              className=\"form-input\"\n              value={quiz.category}\n              onChange={handleChange}\n            >\n              <option value=\"sports\">sports</option>\n              <option value=\"history\">history</option>\n              <option value=\"politics\">politics</option>\n            </select>\n          </div>\n\n          {/*difficulty*/}\n          <div className=\"form-control\">\n            <label htmlFor=\"category\">select difficulty</label>\n            <select\n              name=\"difficulty\"\n              id=\"difficulty\"\n              className=\"form-input\"\n              value={quiz.difficulty}\n              onChange={handleChange}\n            >\n              <option value=\"easy\">easy</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"hard\">hard</option>\n            </select>\n          </div>\n\n          {error && (\n            <p className=\"error\">\n              can't generate questions, please try different questions\n            </p>\n          )}\n          <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\n            start\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n  return (\n    <div\n      className={`${\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\n      }`}\n    >\n      <div className=\"modal-content\">\n        <h2>congrats!</h2>\n        <p>\n          You answered {((correct / questions.length) * 100).toFixed(0)} % of\n          questions correctly\n        </p>\n        <button className=\"close-btn\" onClick={closeModal}>\n          play again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n\n  if (waiting) {\n    return <SetupForm />;\n  }\n\n  if (loading) {\n    return <Loading />;\n  }\n  const { correct_answer, incorrect_answers, question } = questions[index];\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers : {correct} / {index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\n          <div className=\"btn-container\">\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => checkAnswer(correct_answer === answer)}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                />\n              );\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}